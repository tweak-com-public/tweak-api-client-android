/**
 * tweak-api
 * Tweak API to integrate with all the Tweak services.  You can find out more about Tweak      at <a href='https://www.tweak.com'>https://www.tweak.com</a>, #tweak.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.tweak.model;

import java.util.*;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class Design  {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("image")
  private String image = null;
  @SerializedName("thumbnail")
  private String thumbnail = null;
  @SerializedName("object")
  private Object object = null;
  @SerializedName("id")
  private Double id = null;
  @SerializedName("customerId")
  private Double customerId = null;
  @SerializedName("tags")
  private List<Object> tags = null;
  @SerializedName("categories")
  private List<Object> categories = null;
  @SerializedName("customer")
  private Object customer = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getImage() {
    return image;
  }
  public void setImage(String image) {
    this.image = image;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getThumbnail() {
    return thumbnail;
  }
  public void setThumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getObject() {
    return object;
  }
  public void setObject(Object object) {
    this.object = object;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getId() {
    return id;
  }
  public void setId(Double id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getCustomerId() {
    return customerId;
  }
  public void setCustomerId(Double customerId) {
    this.customerId = customerId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Object> getTags() {
    return tags;
  }
  public void setTags(List<Object> tags) {
    this.tags = tags;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Object> getCategories() {
    return categories;
  }
  public void setCategories(List<Object> categories) {
    this.categories = categories;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getCustomer() {
    return customer;
  }
  public void setCustomer(Object customer) {
    this.customer = customer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Design design = (Design) o;
    return (this.name == null ? design.name == null : this.name.equals(design.name)) &&
        (this.image == null ? design.image == null : this.image.equals(design.image)) &&
        (this.thumbnail == null ? design.thumbnail == null : this.thumbnail.equals(design.thumbnail)) &&
        (this.object == null ? design.object == null : this.object.equals(design.object)) &&
        (this.id == null ? design.id == null : this.id.equals(design.id)) &&
        (this.customerId == null ? design.customerId == null : this.customerId.equals(design.customerId)) &&
        (this.tags == null ? design.tags == null : this.tags.equals(design.tags)) &&
        (this.categories == null ? design.categories == null : this.categories.equals(design.categories)) &&
        (this.customer == null ? design.customer == null : this.customer.equals(design.customer));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (name == null ? 0: name.hashCode());
    result = 31 * result + (image == null ? 0: image.hashCode());
    result = 31 * result + (thumbnail == null ? 0: thumbnail.hashCode());
    result = 31 * result + (object == null ? 0: object.hashCode());
    result = 31 * result + (id == null ? 0: id.hashCode());
    result = 31 * result + (customerId == null ? 0: customerId.hashCode());
    result = 31 * result + (tags == null ? 0: tags.hashCode());
    result = 31 * result + (categories == null ? 0: categories.hashCode());
    result = 31 * result + (customer == null ? 0: customer.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Design {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  image: ").append(image).append("\n");
    sb.append("  thumbnail: ").append(thumbnail).append("\n");
    sb.append("  object: ").append(object).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  customerId: ").append(customerId).append("\n");
    sb.append("  tags: ").append(tags).append("\n");
    sb.append("  categories: ").append(categories).append("\n");
    sb.append("  customer: ").append(customer).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
